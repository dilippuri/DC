/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _GCD_H_RPCGEN
#define _GCD_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


struct gcdin {
	int x;
	int y;
};
typedef struct gcdin gcdin;

struct gcdout {
	int z;
};
typedef struct gcdout gcdout;

#define GCD_P 0x3434001
#define GCD_V 1

#if defined(__STDC__) || defined(__cplusplus)
#define GCD 1
extern  gcdout * gcd_1(gcdin *, CLIENT *);
extern  gcdout * gcd_1_svc(gcdin *, struct svc_req *);
extern int gcd_p_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define GCD 1
extern  gcdout * gcd_1();
extern  gcdout * gcd_1_svc();
extern int gcd_p_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_gcdin (XDR *, gcdin*);
extern  bool_t xdr_gcdout (XDR *, gcdout*);

#else /* K&R C */
extern bool_t xdr_gcdin ();
extern bool_t xdr_gcdout ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_GCD_H_RPCGEN */
